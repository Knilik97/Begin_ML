# Беспилотный автомобиль
%%writefile SelfCar.py
#Импортируем модуль рандом для погоды
import random
#Создаю класс погода

class Weather:

    # Объявляю метод init с параметром self для доступа к классу
    def __init__(self):
        # Объявляю атрибут(conditions) принадлежащего к конкретному классу погоды, self
        # И создаю список погодных условий
        self.conditions = ["Солнечно", "Облачно", "Дождливо", "Снег", "Ветрено", "Туманно"]

    # Объявляю метод с параметром self, для доступа ко всем экземплярам класса Weather
    def determine(self):
        # Возвращаю результат определения погоды с помощью функции random.choice из модуля random
        return random.choice(self.conditions)

# Создаю класс беспилотный автомобиль
class Self_Car:
    # Объявляю переменную с именем класса
    Name_class = "Беспилотный автомобиль"

    # Объявляю метод init с параметром self для доступа к классу
    # И создаю переменные для хранения свойств автомобиля
    def __init__(self, brand, color, body_type,weight, power):
        # Объявил переменные со свойствами принадлежащих к классу Self_Car
        self.brand = brand
        self.color = color
        self.body_type = body_type
        self.weight= weight
        self.power = power

    # Объявил метод-действие открывания дверей
    def open_door(self):
        # Вывод на экран о том, что видит машина
        print("Приближается хозяин, какую дверь вам открыть?")
        # Ввод от пользователя для открытия нужной двери
        user_input = input("Введите какую дверь открыть ? (например передняя правая): ").strip().lower()
        # Создаю словарь пар-ключ значения для дальнейшего вывода на экран
        doors = {
            "передняя левая": "Передняя левая дверь открыта.",
            "передняя правая": "Передняя правая дверь открыта.",
            "задняя левая": "Задняя левая дверь открыта.",
            "задняя правая": "Задняя правая дверь открыта."
        }
        # Если ввод от пользователя совпадает с ключом в словаре
        if user_input in doors:
            # Вывод информации об открытии той или иной двери
            print(doors[user_input])
        # Иначе вывод что такой двери нет
        else:
            print("Извините, такой двери нет. Пожалуйста, введите корректное название двери.")

    # Создал метод-действие определения погоды
    def determine_weather(self):
        # Вывод на экран действия
        print("Определение погоды на улице:")
        # Объявил переменную и присвоил вызов класса
        weather = Weather()
        # Объявил переменную и присвоил вызов метода
        current_weather = weather.determine()
        # Вывод на экран текущей погоды
        print(f"Текущая погода: {current_weather}")
    # Объявил метод-действия построения маршрута
    def gps(self):
        # Вывод на экран действия
        print("Построение маршрута &")
        # Объявил переменную для сохранения результата от пользователя
        route = input(" Куда едем ? ")
        # Если в переменной route будет любое значение
        if route:
            # Вывод на экран, о том:
            print("Маршрут построен")
        # Иначе:
        else:
            print("Маршрут не указан")

# Импортируем классы из модуля SelfCar: класс автомобиль и погода
from SelfCar import Weather
from SelfCar import Self_Car
# Объявил переменную, в неё сохраняются параметры авто
car = Self_Car("AI-python", "Чёрный", "crossover", 1000, 200 )
# Далее выводы на экран параметров
print("Наименование класса - ", car.Name_class)
print("Ваш беспилотный автомобиль:",car.brand)
print("Цвет - ", car.color)
print("Тип кузова - ", car.body_type)
print("Вес - ", car.weight, "кг")
print("Мощность", car.power, "л.с")
# вывод на экран действий методов объекта
car.open_door()
car.determine_weather()
car.gps()
